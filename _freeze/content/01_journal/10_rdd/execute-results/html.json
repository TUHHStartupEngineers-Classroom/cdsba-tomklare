{
  "hash": "3a5ee8fe98710cdbc93843ece947929b",
  "result": {
    "markdown": "---\ntitle: \"Regression Discontinuity\"\n---\n\n\n## Normal bandwith   \n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-1_f6955714318ab285d716924ea372c2b9'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dagitty)\nlibrary(ggdag)\n\n\ndf <- readRDS(\"./Causal_Data_Science_Data/coupon.rds\")\n\n# Define cut-off\nc0 <- 60\n\n\nbw <- c0 + c(-5, 5)\n\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- df %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- df %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\n# Alternative way to define tables\n# df_bw_below <- df %>% filter(days_since_last >= bw[1], days_since_last  < c0)\n# df_bw_above <- df %>% filter(days_since_last >= c0, days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\n#dim(df_bw)\n\n# [3.2] Local Average treatment effect (LATE) ----\n# Extract values for vertical lines to visualize local average treatment effect\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\n#sprintf(\"LATE: %.2f\", late)\n\nlm_bw <- lm(purchase_after ~ days_since_last_centered + coupon, df_bw)\n#summary(lm_bw)\n\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, color = \"blue\", linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n               linetype = \"dotted\", color = \"blue\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\", color = \"blue\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           color = \"blue\", fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n## Double bandwidth\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-2_214a8108a0ce920a7c4a9cd2d5d0170b'}\n\n```{.r .cell-code}\nbw <- c0 + c(-5, 5)*2\n\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- df %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- df %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\n# Alternative way to define tables\n# df_bw_below <- df %>% filter(days_since_last >= bw[1], days_since_last  < c0)\n# df_bw_above <- df %>% filter(days_since_last >= c0, days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\n#dim(df_bw)\n\n# [3.2] Local Average treatment effect (LATE) ----\n# Extract values for vertical lines to visualize local average treatment effect\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\n#sprintf(\"LATE: %.2f\", late)\n\nlm_bw <- lm(purchase_after ~ days_since_last_centered + coupon, df_bw)\n#summary(lm_bw)\n\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, color = \"blue\", linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n               linetype = \"dotted\", color = \"blue\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\", color = \"blue\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           color = \"blue\", fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n## Half bandwidth\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-3_4ccbec229bda2321c13cc1dac7912e2a'}\n\n```{.r .cell-code}\nbw <- c0 + c(-5, 5)/2\n\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- df %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- df %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\n# Alternative way to define tables\n# df_bw_below <- df %>% filter(days_since_last >= bw[1], days_since_last  < c0)\n# df_bw_above <- df %>% filter(days_since_last >= c0, days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\n#dim(df_bw)\n\n# [3.2] Local Average treatment effect (LATE) ----\n# Extract values for vertical lines to visualize local average treatment effect\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\n#sprintf(\"LATE: %.2f\", late)\n\nlm_bw <- lm(purchase_after ~ days_since_last_centered + coupon, df_bw)\n#summary(lm_bw)\n\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, color = \"blue\", linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n               linetype = \"dotted\", color = \"blue\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\", color = \"blue\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           color = \"blue\", fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nThe model is somewhat stable, but mostly closer to the cut-off point.\n\n## Shipping campaign\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-4_8e006de0f5c7ce5e984cd8bae1b6c4e8'}\n\n```{.r .cell-code}\nlibrary(rddensity)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Paket 'rddensity' wurde unter R Version 4.3.2 erstellt\n```\n:::\n\n```{.r .cell-code}\ndf <- readRDS(\"./Causal_Data_Science_Data/shipping.rds\")\n\nhead(df)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"purchase_amount\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"13.105677\"},{\"1\":\"37.120848\"},{\"1\":\"11.258422\"},{\"1\":\"9.453785\"},{\"1\":\"53.237258\"},{\"1\":\"20.541164\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nc0 = 30\n\nggplot(df, aes(x = purchase_amount)) +\n  geom_histogram(binwidth = 4, color = \"white\", boundary = c0, alpha = .6) +\n  geom_vline(xintercept = c0, color = \"red\") +\n  xlab(\"purchase amount\") +\n  theme(legend.title = element_blank())\n```\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nNo, it is not a good idea to use purchase amount as a running variable with a cut-off at 30â‚¬, because there is a big leap and the function is not continuous in this point. This is likely due to the fact that most people wanted to reach the free shipping amount.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}